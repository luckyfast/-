//13.

//12.IE6的双倍margin，连续浮动的元素带有相同方向的margin时，出现双重margin
	<ul>
		<li></li>
		<li></li>
		<li></li>
	</ul>
	
	float: left;
	margin-right: 40px;//margin方向与浮动方向相反
	
	<li class="no1"></li>
	ul li.no1{
	_margin-left:20px;
	}//单独给队首的元素，写一个一半的margin

//11.标准流的盒子，有明确的width，使用margin:0 auto居中
margin:0 auto;    //让这个div自己在大容器中的水平方向上居中。
text-align: center;  //让这个div内部的文本居中。

//10.overflow:hidden;用于浮动的清除
li{
    overflow:hidden;
}

//9.让第一个div撑出高度
<div>
	<p></p>
	<p></p>
	<p></p>
	<div class="cl h10"></div>
</div>

<div>
	<p></p>
	<p></p>
	<p></p>
</div>

//8.隔开两个浮动实现浮动清除
<div>
	<p></p>
	<p></p>
	<p></p>
</div>

<div class="cl h10"></div>

<div>
	<p></p>
	<p></p>
	<p></p>
</div>

//7.给盒子增加clear:both实现浮动清除
<div>
	<p></p>
	<p></p>
	<p></p>
</div>

<div>   //clear:both;
	<p></p>
	<p></p>
	<p></p>
</div>

//6.利用加高实现浮动清除
<div>     //设置height
	<p></p>
	<p></p>
	<p></p>
</div>

<div>    //设置height
	<p></p>
	<p></p>
	<p></p>
</div>

//5.下一个兄弟选择器
<style type="text/css">
    h3 + p {
        color: red;
    }
</style>

//4.序选择器
<style type="text/css">
    ul li:first-child {
        color: red;
    }
</style>

//3.子代选择器
div > p {
    color: red;
}

//2.
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>交集选择器测试</title>
        <style type="text/css">
            h3.special {
                color: red;
            }
        </style>
    </head>
    <body>
        <h3 class="special zhongyao">标题1</h3>
        <h3 class="special">我也是标题</h3>
        <p>我是段落</p>
    </body>
</html>

//1.利用CSS画个三角形
div{
  width: 0px;
  height: 0px;
  border: 50px soild white;
  border-top-color: red;
  border-botttom: none;
}
